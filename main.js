!function(){"use strict";function e(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var s=n.call(e,t);if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var t=class{constructor(e,t){var n,s,i;n=this,i=()=>this._inputList.some((e=>!e.validity.valid)),(s=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var s=n.call(e,t);if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(s="_hasInvalidInput"))in n?Object.defineProperty(n,s,{value:i,enumerable:!0,configurable:!0,writable:!0}):n[s]=i,this._inputSelector=e.inputSelector,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._form=t,this._inputList=[...this._form.querySelectorAll(this._inputSelector)],this._buttonElement=this._form.querySelector(this._submitButtonSelector)}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)}))}_showInputError(e){const t=this._form.querySelector(`.${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`.${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this.toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._setEventListeners()}},n=class{constructor(e){this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close"))&&this.close()}))}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscClose)}},s=class extends n{constructor(e,t){super(e),this._handleFormSubmit=t,this._popupForm=this._popupElement.querySelector(".form"),this._popupInputs=this._popupForm.querySelectorAll(".form__input")}_getInputValues(){const e={};return this._popupInputs.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}close(){this._popupForm.reset(),super.close()}};const i={inputSelector:".form__input",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled"},r=document.querySelector(".popup_type_edit-profile").querySelector(".form"),o=document.querySelector(".popup_type_add-card").querySelector(".form"),l=(document.querySelector(".gallery"),document.querySelector(".profile__button-edit")),a=document.querySelector(".profile__button-add"),u=document.querySelector(".form__input_content_name"),c=document.querySelector(".form__input_content_job"),p=document.querySelector("#card").content,_=t=>new class{constructor(t,n,s,i){e(this,"_handleDelete",(()=>{this._element.remove(),this._element=null})),e(this,"_handleLike",(()=>{this._likeButton.classList.toggle("card__button-like_liked")})),e(this,"_setEventListeners",(()=>{this._imageElement.addEventListener("click",(()=>this._handleImageClick(this._element))),this._likeButton.addEventListener("click",this._handleLike),this._trashButton.addEventListener("click",this._handleDelete)})),e(this,"generateCard",(()=>(this._element=this._cardSelector.querySelector(".card").cloneNode(!0),this._likeButton=this._element.querySelector(".card__button-like"),this._imageElement=this._element.querySelector(".card__image"),this._trashButton=this._element.querySelector(".card__button-trash"),this._imageElement.src=this._link,this._imageElement.alt=this._title,this._element.querySelector(".card__title").textContent=this._title,this._setEventListeners(),this._element))),this._title=t,this._link=n,this._cardSelector=s,this._handleImageClick=i}}(t.name,t.link,p,(()=>{m.open(t.name,t.link)})).generateCard(),d=new class{constructor(e,t){let{items:n,renderer:s}=e;this._items=n,this._renderer=s,this._container=document.querySelector(t)}addItem(e){const t=this._renderer(e);this._container.append(t)}prepenedItem(e){this._container.prepend(e)}renderItems(){this._items.forEach((e=>{this.addItem(e)}))}}({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:e=>{const t={name:e.name,link:e.link};return _(t)}},".gallery");d.renderItems();const h=new s(".popup_type_add-card",(e=>{const t={name:e.name,link:e.link},n=_(t);d.prepenedItem(n),E.toggleButtonState()})),m=new class extends n{constructor(e){super(e),this.popUpDescription=this._popupElement.querySelector(".popup__description")}open(e,t){this.popUpDescription.textContent=e;const n=this._popupElement.querySelector(".popup__image");n.src=t,n.alt=e,super.open()}}(".popup_type_card");m.setEventListeners();const v=new class{constructor(e){let{nameSelector:t,jobSelector:n}=e;this._name=document.querySelector(t),this._job=document.querySelector(n)}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(e){let{name:t,job:n}=e;this._name.textContent=t,this._job.textContent=n}}({nameSelector:".profile__title",jobSelector:".profile__subtitle"}),y=new s(".popup_type_edit-profile",(e=>{v.setUserInfo(e)}));y.setEventListeners(),l.addEventListener("click",(()=>{const e=v.getUserInfo();var t,n;t=e.name,n=e.job,u.value=t,c.value=n,y.open(),b.resetValidation()})),h.setEventListeners(),a.addEventListener("click",(()=>{h.open(),E.resetValidation(),E.toggleButtonState()}));const b=new t(i,r);b.enableValidation();const E=new t(i,o);E.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,